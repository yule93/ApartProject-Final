{"remainingRequest":"C:\\Users\\dbfm0\\Desktop\\민주거\\SSAFY학습\\관통프로젝트6(Vue+SpringMyBatis)\\HappyHouse6\\happyhouse6-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dbfm0\\Desktop\\민주거\\SSAFY학습\\관통프로젝트6(Vue+SpringMyBatis)\\HappyHouse6\\happyhouse6-Vue\\src\\components\\user\\MemberJoin.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\dbfm0\\Desktop\\민주거\\SSAFY학습\\관통프로젝트6(Vue+SpringMyBatis)\\HappyHouse6\\happyhouse6-Vue\\src\\components\\user\\MemberJoin.vue","mtime":1637717679869},{"path":"C:\\Users\\dbfm0\\Desktop\\민주거\\SSAFY학습\\관통프로젝트6(Vue+SpringMyBatis)\\HappyHouse6\\happyhouse6-Vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1637110097505},{"path":"C:\\Users\\dbfm0\\Desktop\\민주거\\SSAFY학습\\관통프로젝트6(Vue+SpringMyBatis)\\HappyHouse6\\happyhouse6-Vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1637110098307},{"path":"C:\\Users\\dbfm0\\Desktop\\민주거\\SSAFY학습\\관통프로젝트6(Vue+SpringMyBatis)\\HappyHouse6\\happyhouse6-Vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1637110097829},{"path":"C:\\Users\\dbfm0\\Desktop\\민주거\\SSAFY학습\\관통프로젝트6(Vue+SpringMyBatis)\\HappyHouse6\\happyhouse6-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637110097214},{"path":"C:\\Users\\dbfm0\\Desktop\\민주거\\SSAFY학습\\관통프로젝트6(Vue+SpringMyBatis)\\HappyHouse6\\happyhouse6-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1637110097966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJlZC10ZXh0IHsKICBjb2xvcjogcmVkOwp9CgouYmx1ZS10ZXh0IHsKICBjb2xvcjogYmx1ZTsKfQo="},{"version":3,"sources":["MemberJoin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+MA;AACA;AACA;;AAEA;AACA;AACA","file":"MemberJoin.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <b-container class=\"bv-example-row mt-3\">\n    <b-row>\n      <b-col>\n        <b-alert variant=\"secondary\" show><h3>회원가입</h3></b-alert>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col></b-col>\n      <b-col cols=\"8\">\n        <b-card class=\"text-center mt-3\" style=\"max-width: 40rem\" align=\"left\">\n          <b-form class=\"text-left\">\n            <b-alert show variant=\"danger\" v-if=\"isRegisterError\"\n              >비어 있는 값이 있는지 확인하세요.</b-alert\n            >\n            <b-form-group label=\"이름:\" label-for=\"username\">\n              <b-form-input\n                id=\"username\"\n                v-model=\"user.username\"\n                required\n                placeholder=\"이름 입력....\"\n                description=\"이름을 입력하세요.\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-group label=\"아이디:\" label-for=\"userid\">\n              <b-form-input\n                id=\"userid\"\n                v-model=\"user.userid\"\n                required\n                placeholder=\"아이디 입력....\"\n                @keyup=\"checkDuplicateId\"\n                :state=\"idCheckFlag\"\n              ></b-form-input>\n              <div :class=\"idCheckMsgColor\">{{ idCheckMsg }}</div>\n            </b-form-group>\n            <b-form-group label=\"비밀번호:\" label-for=\"userpwd\">\n              <b-form-input\n                type=\"password\"\n                id=\"userpwd\"\n                v-model=\"user.userpwd\"\n                required\n                placeholder=\"비밀번호 입력....\"\n                @blur=\"checkPassword\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-group label=\"비밀번호 확인:\" label-for=\"pwdcheck\">\n              <b-form-input\n                type=\"password\"\n                id=\"pwdcheck\"\n                required\n                placeholder=\"비밀번호 재입력\"\n                v-model=\"confirmpassword\"\n                @blur=\"checkPassword\"\n                :state=\"passwordCheckFlag\"\n              ></b-form-input>\n              <div>{{ passwordCheckMsg }}</div>\n            </b-form-group>\n            <b-form-group\n              label=\"이메일:\"\n              label-for=\"emailid\"\n              label-align-lg=\"left\"\n            >\n              <b-form-input\n                v-model=\"emailInfo.emailId\"\n                id=\"emailId\"\n                required\n                placeholder=\"이메일 입력...\"\n              ></b-form-input>\n              @\n              <b-form-select\n                class=\"form-control\"\n                id=\"emaildomain\"\n                name=\"emaildomain\"\n                v-model=\"emailInfo.emailDomain\"\n                :options=\"emailDomains\"\n              >\n              </b-form-select>\n              <input type=\"hidden\" v-model=\"user.email\" />\n            </b-form-group>\n            <b-form-group>\n              <b-button\n                type=\"button\"\n                variant=\"primary\"\n                class=\"m-1\"\n                @click=\"register\"\n                >회원가입</b-button\n              >\n              <b-button\n                type=\"button\"\n                variant=\"success\"\n                class=\"m-1\"\n                @click=\"moveToLogin\"\n                >로그인</b-button\n              >\n              <b-button\n                type=\"button\"\n                variant=\"warning\"\n                class=\"m-1\"\n                @click=\"movePage\"\n                >홈으로 가기</b-button\n              >\n            </b-form-group>\n          </b-form>\n        </b-card>\n      </b-col>\n      <b-col></b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport { mapState, mapActions } from \"vuex\";\n\nconst memberStore = \"memberStore\";\n\nexport default {\n  name: \"MemberJoin\",\n  data() {\n    return {\n      user: {\n        username: null,\n        userid: null,\n        userpwd: null,\n        email: null,\n      },\n      emailInfo: {\n        emailId: null,\n        emailDomain: null,\n      },\n      emailDomains: [\n        { value: null, text: \"선택하세요.\" },\n        { value: \"ssafy.com\", text: \"싸피\" },\n        { value: \"naver.com\", text: \"네이버\" },\n        { value: \"google.com\", text: \"구글\" },\n        { value: \"kakao.com\", text: \"카카오\" },\n      ],\n      idCheckMsg: null,\n      idCheckFlag: false,\n      passwordCheckMsg: \"비밀번호 확인이 비밀번호와 맞지 않습니다.\",\n      confirmpassword: null,\n      passwordCheckFlag: false,\n    };\n  },\n  computed: {\n    ...mapState(memberStore, [\"isRegister\", \"isRegisterError\", \"isDuplicated\"]),\n    idCheckMsgColor: function () {\n      return {\n        \"red-text\": !this.idCheckFlag,\n        \"blue-text\": this.idCheckFlag,\n      };\n    },\n  },\n  methods: {\n    ...mapActions(memberStore, [\"getUserInfo\", \"userRegister\", \"idCheck\"]),\n    movePage() {\n      this.$router.push({ name: \"Home\" });\n    },\n    moveToLogin() {\n      this.$router.push({ name: \"SignIn\" });\n    },\n    checkPassword() {\n      if (this.confirmpassword == this.user.userpwd) {\n        this.passwordCheckMsg = \"비밀번호 확인이 맞습니다.\";\n        this.passwordCheckFlag = true;\n      }\n    },\n    register() {\n      var ckid = this.user.userid;\n      if (ckid.length < 6 || ckid.length > 16 || ckid == null) {\n        this.idCheckMsg = \"아이디는 6글자 이상, 16자 이하여야 합니다.\";\n      } else if (\n        this.idCheckFlag &&\n        !this.isDuplicated &&\n        this.passwordCheckFlag\n      ) {\n        if (confirm(\"해당 정보로 등록하시겠습니까?\")) {\n          this.user.email = \"\".concat(\n            this.emailInfo.emailId,\n            \"@\",\n            this.emailInfo.emailDomain\n          );\n          this.userRegister(this.user);\n          if (this.isRegister) {\n            this.$router.push({ name: \"SignIn\" });\n          }\n        }\n      }\n    },\n    async checkDuplicateId() {\n      await this.idCheck(this.user.userid);\n      var ckid = this.user.userid;\n      if (ckid.length < 6 || ckid.length > 16) {\n        this.idCheckFlag = false;\n        this.idCheckMsg = \"아이디는 6글자 이상, 16자 이하여야 합니다.\";\n      } else if (this.isDuplicated) {\n        this.idCheckFlag = false;\n        this.idCheckMsg = \"중복되는 아이디입니다.\";\n      } else {\n        this.idCheckFlag = true;\n        this.idCheckMsg = \"사용할 수 있는 아이디입니다.\";\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.red-text {\n  color: red;\n}\n\n.blue-text {\n  color: blue;\n}\n</style>\n"]}]}